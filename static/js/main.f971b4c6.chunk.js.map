{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","className","onClick","onChecked","id","text","InputArea","useState","inputText","setInputText","onChange","event","newValue","target","value","type","onAdd","App","items","setItems","deleteItem","prevItems","filter","item","index","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"yRAoBeA,MAjBf,SAAkBC,GAChB,OACE,6BACE,4BACG,IACD,kBAAC,IAAD,CACEC,UAAU,aACVC,QAAS,KACPF,EAAMG,UAAUH,EAAMI,OAGzBJ,EAAMK,QCWAC,MAvBf,SAAmBN,GAAQ,MAAD,EACUO,mBAAS,IADnB,mBACjBC,EADiB,KACNC,EADM,KAQxB,OACE,yBAAKR,UAAU,QACb,2BAAOS,SAPX,SAAsBC,GACpB,MAAMC,EAAWD,EAAME,OAAOC,MAC9BL,EAAaG,IAKoBG,KAAK,OAAOD,MAAON,IAClD,4BACEN,QAAS,KACPF,EAAMgB,MAAMR,GACZC,EAAa,MAGf,wCCyBOQ,MAxCf,WAAgB,MAAD,EACaV,mBAAS,IADtB,mBACNW,EADM,KACCC,EADD,KAUb,SAASC,EAAWhB,GAClBe,EAAUE,GACDA,EAAUC,OAAO,CAACC,EAAMC,IACtBA,IAAUpB,IAKvB,OACE,yBAAKH,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,kBAAC,EAAD,CAAWe,MApBER,IACVA,GAGLW,EAAUE,GAAc,IAAIA,EAAWb,OAiBrC,6BACE,4BACGU,EAAMO,IAAI,CAACC,EAAUF,IACpB,kBAAC,EAAD,CACEG,IAAKH,EACLpB,GAAIoB,EACJnB,KAAMqB,EACNvB,UAAWiB,SC/BzBQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f971b4c6.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\n\nfunction ToDoItem(props) {\n  return (\n    <div>\n      <li>\n        {\" \"}\n        <HighlightOffIcon\n          className=\"delete-btn\"\n          onClick={() => {\n            props.onChecked(props.id);\n          }}\n        />\n        {props.text}\n      </li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\n\nfunction InputArea(props) {\n  const [inputText, setInputText] = useState(\"\");\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  return (\n    <div className=\"form\">\n      <input onChange={handleChange} type=\"text\" value={inputText} />\n      <button\n        onClick={() => {\n          props.onAdd(inputText);\n          setInputText(\"\");\n        }}\n      >\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  const addItem = (inputText) => {\n    if (!inputText) {\n      return;\n    }\n    setItems((prevItems) => [...prevItems, inputText]);\n  };\n\n  function deleteItem(id) {\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea onAdd={addItem} />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: I have extracted the Input Area, including the <input> and\n//<button> elements into a seperate Component called InputArea.\n//Your job is to make the app work as it did before but this time with the\n//InputArea as a seperate Component.\n\n// DO NOT: Modify the ToDoItem.jsx\n// DO NOT: Move the input/button elements back into the App.jsx\n\n//Hint 1: You will need to think about how to manage the state of the input element\n//in InputArea.jsx.\n//Hint 2: You will need to think about how to pass the input value back into\n//the addItem() function in App.jsx.\n"],"sourceRoot":""}